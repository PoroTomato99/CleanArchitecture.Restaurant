@page
@model DetailsModel
@using Microsoft.AspNetCore.Http;

@if (Model.Success != null)
{
    <div class="alert alert-success" role="alert">
        <p>
            @Model.Success
        </p>
    </div>
}
@if (Model.Error != null)
{
    <div class="alert alert-danger" role="alert">
        <p>
            @Model.Error
        </p>
    </div>
}
<h2 class="text-md-center">
    Restaurant Details
</h2>

<partial name="Restaurants/_restaurantsDetails" model="@Model.RestaurantDetail">



    <div class="container">
        <div class="row justify-content-md-center">
            <div class="col col-lg-2">
                Totol Follower <span class="badge badge-light"> @Model.FollowerDetails.FollowerDetail.Count</span>
            </div>
            @if (HttpContext.Session.GetString("token") != null)
            {
                <div class="col col-lg-2">

                    @if (Model.FollowerDetails.FollowerDetail.Where(x => x.UserId == HttpContext.Session.GetString("userid") && x.RestaurantId == Model.RestaurantDetail.Restaurant.Id).Count() > 0)
                    {
                        var value = @Model.FollowerDetails.FollowerDetail.Where(x => x.UserId == HttpContext.Session.GetString("userid") && x.RestaurantId == Model.RestaurantDetail.Restaurant.Id).FirstOrDefault();
                        <form method="post" asp-page-handler="Unfollow">
                            <input type="hidden" asp-for="Unfollow.Id" value="@value.Id" />
                            <input type="hidden" asp-for="Unfollow.RestaurantId" value="@value.RestaurantId" />
                            <input type="hidden" asp-for="Unfollow.RestaurantId" value="@value.UserId" />
                            <input type="hidden" asp-for="Unfollow.RestaurantId" value="@value.DateFollowed" />
                            <button type="submit" class="btn btn-primary btn-sm">
                                Unfollow
                            </button>
                        </form>

                    }
                    else
                    {
                        //var value = @Model.FollowerDetails.FollowerDetail.Where(x => x.UserId == HttpContext.Session.GetString("userid") && x.RestaurantId == Model.RestaurantDetail.Restaurant.Id).FirstOrDefault();
                        <form method="post" asp-page-handler="Follow">
                            @{
                                var dateNow = DateTime.Now.ToString("dd-MM-yyyy HH:mm");
                            }
                            <input type="hidden" asp-for="Follow.RestaurantId" value="@Model.RestaurantDetail.Restaurant.Id" />
                            <input type="hidden" asp-for="Follow.UserId" value="@Model.UserId" />
                            <input type="hidden" asp-for="Follow.DateFollowed" value="@dateNow" />
                            <button type="submit" class="btn btn-primary btn-sm">
                                Follow
                            </button>
                        </form>

                    }

                </div>
            }
        </div>
    </div>




    @{
        var todate = DateTime.Now.ToString("yyyy-MM-dd");
        var bookingDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
        var reservedBy = Guid.NewGuid();
    }
    <form method="post">

        <input type="date" asp-for="Reservation.ReservationDate" min="@todate" class="form-control" />
        <span asp-validation-for="Reservation.ReservationDate" class="text-danger"></span>

        <select asp-for="Reservation.ReservationTime">
            <option selected value=""> --:-- </option>
        </select>


        @if (HttpContext.Session.GetString("token") != null)
        {
            var userId = HttpContext.Session.GetString("userid");
            <input type="hidden" asp-for="Reservation.ReservedBy" value="@userId" />
        }
        else
        {
            <div class="alert alert-info" role="alert">
                Seems Like You Have Not Logged In
            </div>
            <input type="email" asp-for="Reservation.ReservedBy" class="form-control" placeholder="Your Email Address" required />
            <p id="error" class="text-danger">
                This is Error
            </p>
        }

        <span asp-validation-for="Reservation.ReservationTime" class="text-danger"></span>
        <input type="hidden" asp-for="Reservation.RestaurantId" value="@Model.RestaurantDetail.Restaurant.Id" />
        <input type="hidden" asp-for="Reservation.BookingDate" value="@bookingDate" />
        <input type="hidden" asp-for="Reservation.Status" value="@Restaurant.Domain.Models.Status.BookingStatus.Pending" />

        <button type="submit">
            Reserve
        </button>
    </form>
    @section scripts{
        <script>
            $(document).ready(function () {
                $("p").hide();
                $("#Reservation_ReservedBy").change(function () {
                    var text = $(this).val();
                    console.log(text);

                    var regex = /^([a-zA-Z0-9_\.\-\+])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                    if (!regex.test(text)) {
                        console.log("incorrect email");
                        $("#error").html("<p class='text-danger'>" + "Invalid Email Address" + "</p>");
                        $("p").show();
                    } else {
                        console.log("correct email")
                    }
                });


                var open_time = $('#openHour').text();
                var end_time = $('#endHour').text();


                var openTime = new Date("January 01, 2000 " + open_time);
                var endTime = new Date("January 01, 2000 " + end_time);
                console.log('OPEN TIME');
                console.log('Get Hours : ' + openTime.getHours());

                console.log('END TIME');
                console.log('Get Hours : ' + endTime.getHours());


                var open_hour = openTime.getHours();
                var end_hour = endTime.getHours();
                var duration = end_hour - open_hour;
                console.log('Duration : ' + duration);



                $('#Reservation_ReservationDate').change(function () {
                    var reservation_date = new Date($(this).val() + ' 00:00:00');

                    var currentDate = new Date();
                    console.log("Today : " + currentDate);
                    console.log('Reservation Date : ' + reservation_date);

                    //get the day
                    _currentDate = currentDate.getDay();
                    _reservation_date = reservation_date.getDay();

                    //get the month
                    current_month = currentDate.getMonth();
                    _reservation_month = reservation_date.getMonth();

                    //get the year
                    current_year = currentDate.getFullYear();
                    _reservation_year = reservation_date.getFullYear();

                    if (_reservation_month > current_month) {
                        var timeString = open_hour;
                        var timeList = [];
                        for (var i = 0; i < duration; i++) {
                            var item = timeString + i + ':00:00';
                            timeList.push(item);
                        }
                        console.log('Time list before Removed : ' + timeList);

                        var length = $('#Reservation_ReservationTime > option').length;
                        if (length > 1) {
                            for (var j = 0; j < timeList.length; j++) {
                                $("#Reservation_ReservationTime option[value='" + timeList[j] + "']").remove();
                            }
                            console.log('removed options');
                        }
                        for (var x = 0; x < timeList.length; x++) {
                            console.log('Time : ' + timeList[x]);
                            $('#Reservation_ReservationTime').append($('<option />').val(timeList[x]).text(timeList[x]));
                        }
                    } else {

                        if (reservation_date > currentDate) {
                            /*when selected date more than current date, then do something*/

                            //first create a timeList
                            var timeString = open_hour;
                            var timeList = [];
                            for (var i = 0; i < duration; i++) {
                                var item = timeString + i + ':00:00';
                                timeList.push(item);
                            }
                            console.log('Time list before Removed : ' + timeList);

                            var length = $('#Reservation_ReservationTime > option').length;


                            if (length > 1) {
                                for (var j = 0; j < timeList.length; j++) {
                                    $("#Reservation_ReservationTime option[value='" + timeList[j] + "']").remove();
                                }
                                console.log('removed options');
                            }
                            for (var x = 0; x < timeList.length; x++) {
                                console.log('Time : ' + timeList[x]);
                                $('#Reservation_ReservationTime').append($('<option />').val(timeList[x]).text(timeList[x]));
                            }
                        } else {
                            /*if selected date not more that current date then do something*/
                            console.log("Need to Cut the Operation Hour");

                            //create a new timeList
                            var newTimeList = [];
                            //first get current time hour
                            var currentDateTime = new Date();
                            var current_Hour = currentDateTime.getHours();
                            var current_minute = currentDateTime.getMinutes();
                            if (current_Hour > open_hour) {
                                if (current_minute > 30) {
                                    current_Hour += 1;
                                }
                                console.log(current_Hour);
                                var new_duration = end_hour - (current_Hour);
                                console.log(new_duration);

                                newTimeList = [];
                                for (var i = 0; i < new_duration; i++) {
                                    var item = current_Hour + i + ":00:00";
                                    newTimeList.push(item);
                                }

                                var opt_length = $('#Reservation_ReservationTime > option').length;
                                var unwanted_opt = [];
                                $("#Reservation_ReservationTime > option").each(function () {
                                    unwanted_opt.push(this.text);
                                });
                                console.log(unwanted_opt);

                                if (unwanted_opt.length > 0) {
                                    for (var a = 1; a < unwanted_opt.length; a++) {
                                        $("#Reservation_ReservationTime option[value='" + unwanted_opt[a] + "']").remove();
                                    }
                                    console.log('removed options');
                                }

                                $("#Reservation_ReservationTime > option").each(function () {
                                    console.log('after removing old options :  ' + this.text);
                                });
                                for (var p = 0; p < newTimeList.length; p++) {
                                    console.log('Time : ' + newTimeList[p]);
                                    $('#Reservation_ReservationTime').append($('<option />').val(newTimeList[p]).text(newTimeList[p]));
                                }
                            } else {
                                console.log('business not yet open ');
                                if (newTimeList.length > 0) {
                                    newTimeList = [];
                                }
                                console.log('before adding : ' + newTimeList);
                                for (var x = 0; x < duration; x++) {
                                    var item = open_hour + x + ':00:00';
                                    newTimeList.push(item);
                                }


                                console.log('after adding ' + newTimeList);

                                var opt_length = $('#Reservation_ReservationTime > option').length;
                                if (opt_length > 1) {
                                    for (var o = 0; o < opt_length; o++) {
                                        $("#Reservation_ReservationTime option[value='" + newTimeList[o] + "']").remove();
                                    }
                                }

                                for (var z = 0; z < newTimeList.length; z++) {
                                    console.log('Time : ' + newTimeList[z]);
                                    $('#Reservation_ReservationTime').append($('<option />').val(newTimeList[z]).text(newTimeList[z]));
                                }
                            }
                        }
                    }
                });
            });
        </script>
    }

